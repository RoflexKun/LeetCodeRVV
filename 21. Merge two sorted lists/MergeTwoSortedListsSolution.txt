/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode *list3 = new ListNode;
        list3 = NULL;
        while(list1 != NULL && list2 != NULL)
        {
            if(list1->val < list2->val)
            {
                if(list3 == NULL)
                {
                    ListNode *u = new ListNode;
                    u->next = NULL;
                    u->val = list1->val;
                    list3 = u;
                    list1 = list1->next;
                }
                else 
                {
                   ListNode *u = list3;
                   while(u->next!=NULL)
                    u = u->next;
                    ListNode *v = new ListNode;
                    v->val = list1->val;
                    v->next = NULL;
                    u->next = v;
                    list1 = list1->next;
                }
            }
            else if(list2->val <= list1->val)
            {
               if(list3 == NULL)
                {
                    ListNode *u = new ListNode;
                    u->next = NULL;
                    u->val = list2->val;
                    list3 = u;
                    list2 = list2->next;
                }
                else 
                {
                    ListNode *u = list3;
                   while(u->next!=NULL)
                    u = u->next;
                    ListNode *v = new ListNode;
                    v->val = list2->val;
                    v->next = NULL;
                    u->next = v;
                    list2 = list2->next;
                } 
            }
        }
        while(list1 != NULL)
        {
           if(list3 == NULL)
                {
                    ListNode *u = new ListNode;
                    u->next = NULL;
                    u->val = list1->val;
                    list3 = u;
                    list1 = list1->next;
                }
                else 
                {
                    ListNode *u = list3;
                   while(u->next!=NULL)
                    u = u->next;
                    ListNode *v = new ListNode;
                    v->val = list1->val;
                    v->next = NULL;
                    u->next = v;
                    list1 = list1->next;
                }
        }
        while(list2 !=NULL)
            {
                if(list3 == NULL)
                {
                    ListNode *u = new ListNode;
                    u->next = NULL;
                    u->val = list2->val;
                    list3 = u;
                    list2 = list2->next;
                }
                else 
                {
                    ListNode *u = list3;
                   while(u->next!=NULL)
                    u = u->next;
                    ListNode *v = new ListNode;
                    v->val = list2->val;
                    v->next = NULL;
                    u->next = v;
                    list2 = list2->next;
                } 
            }
        return list3;
    }
};